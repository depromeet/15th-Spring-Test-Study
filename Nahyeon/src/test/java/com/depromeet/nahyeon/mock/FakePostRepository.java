package com.depromeet.nahyeon.mock;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicLong;

import com.depromeet.nahyeon.post.domain.Post;
import com.depromeet.nahyeon.post.service.port.PostRepository;

public class FakePostRepository implements PostRepository {

	private final AtomicLong autoGeneratedId = new AtomicLong(0);
	private final List<Post> data = new ArrayList<>();

	@Override
	public Optional<Post> findById(long id) {
		return data.stream()
			.filter(item -> Objects.equals(item.getId(), id))
			.findAny();
	}

	@Override
	public Post save(Post post) {
		if (post.getId() == null || post.getId() == 0) {
			Post newPost = Post.builder()
				.id(1L)
				.content(post.getContent())
				.createdAt(post.getCreatedAt())
				.modifiedAt(post.getModifiedAt())
				.writer(post.getWriter())
				.build();
			data.add(newPost);
			return newPost;
		} else {
			data.removeIf(item -> Objects.equals(item.getId(), post.getId()));
			data.add(post);
			return post;
		}
	}
}
